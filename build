#!/usr/bin/env bash
set -euo pipefail

base_dir="$(pwd)"
build_dir="$base_dir/out"
app_name="common"

usage () {
    echo "Commands: test, debug, release, (sudo) install, run, clean"
}

make_all () {
    release="Debug"
    if [ -n "${1+x}" ]; then
        release="$1"
    fi

    cmake -S . -B "${build_dir}" -DCMAKE_BUILD_TYPE="${release}"
    cmake --build "${build_dir}" -- all
}

make_clean () {
    echo ">> Cleaning ${app_name} <<"
    rm -rf "${build_dir}"
    echo "Removed ${build_dir}"
}

if [ -n "${1+x}" ]; then
    case "$1" in
        "test")
            echo ">> Building ${app_name} tests <<"
            make_all
            echo ""
            echo ">> Running ${app_name} tests <<"
            make -C "${build_dir}" test
            ;;
        "debug")
            echo ">> Building ${app_name} debug <<"
            make_all
            ;;
        "release")
            make_clean
            echo ""
            echo ">> Building ${app_name} release <<"
            make_all "Release"
            ;;
        "install")
            if [ "$(whoami)" != "root" ]; then
                echo "ERROR: Must run as root to install library."
                exit 1
            fi
            ./build release
            echo ""
            echo ">> Copying library to /usr/local <<"
            if [ ! -d "/usr/local/include/$app_name" ]; then
                mkdir /usr/local/include/$app_name
            fi
            cp -vi $base_dir/inc/* /usr/local/include/$app_name
            cp -vi $build_dir/lib/* /usr/local/lib/
            echo ""
            ./build clean
            ;;
        "run")
            target=${build_dir}/bin/${app_name}
            if [ ! -f "$target" ]; then
                echo ">> Building ${app_name} debug <<"
                make_all
                echo ""
            fi
            echo ">> Running ${app_name} <<"
            $target
            ;;
        "clean")
            make_clean
            ;;
        *)
            usage
            ;;
    esac
else
    usage
fi
